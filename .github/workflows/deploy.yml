name: Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    environment:
      name: production
      url: ${{ steps.URL.outputs.URL }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: clean shadowJar
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install
        working-directory: .deploy/lambda
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: npx cdk deploy --outputs-file=cdk.out/outputs.json --require-approval=never
        working-directory: .deploy/lambda
        env:
          TOKEN_TELEGRAM_BOT: ${{ secrets.TOKEN_TELEGRAM_BOT }}
          TOKEN_YOUTUBE_API: ${{ secrets.TOKEN_YOUTUBE_API }}
      - id: URL
        run: echo "::set-output name=URL::$(jq -r '.JProfByBotStack.URL' cdk.out/outputs.json)"
        working-directory: .deploy/lambda

  herald:
    name: Herald
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - uses: gradle/wrapper-validation-action@v1

      - uses: gradle/gradle-build-action@v2
        with:
          arguments: :herald:install
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - uses: docker/metadata-action@v3
        id: metadata
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/herald
          flavor: |
            latest=true

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        with:
          context: herald
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
