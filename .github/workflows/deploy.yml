name: Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    environment:
      name: production
      url: ${{ steps.URL.outputs.URL }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
      - uses: burrunan/gradle-cache-action@v1
        with:
          job-id: deploy
          read-only: ${{ github.ref != 'refs/heads/master' }}
      - run: ./gradlew clean shadowJar

      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm install
        working-directory: .deploy/lambda
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: npx cdk deploy --outputs-file=cdk.out/outputs.json --require-approval=never
        working-directory: .deploy/lambda
        env:
          TOKEN_TELEGRAM_BOT: ${{ secrets.TOKEN_TELEGRAM_BOT }}
          TOKEN_YOUTUBE_API: ${{ secrets.TOKEN_YOUTUBE_API }}
      - id: URL
        run: echo "::set-output name=URL::$(jq -r '.JProfByBotStack.URL' cdk.out/outputs.json)"
        working-directory: .deploy/lambda
