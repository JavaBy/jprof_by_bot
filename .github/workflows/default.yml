name: Default

on:
  push:
    branches-ignore:
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: clean test
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            **/build/test-results
            **/build/reports

  db-test:
    name: DB test
    runs-on: ubuntu-20.04
    services:
      localstack:
        image: localstack/localstack
        env:
          SERVICES: dynamodb
        ports:
          - 4566:4566
    env:
      AWS_EC2_METADATA_DISABLED: true
      DYNAMODB_URL: http://localhost:4566
      AWS_DEFAULT_REGION: us-east-2
      AWS_ACCESS_KEY_ID: accessKey
      AWS_SECRET_ACCESS_KEY: secretKey
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
      - run: votes/dynamodb/src/test/resources/seed.sh
      - run: youtube/dynamodb/src/test/resources/seed.sh
      - run: kotlin/dynamodb/src/test/resources/seed.sh
      - run: dialogs/dynamodb/src/test/resources/seed.sh
      - run: quizoji/dynamodb/src/test/resources/seed.sh
      - run: monies/dynamodb/src/test/resources/seed.sh
      - run: pins/dynamodb/src/test/resources/seed.sh
      - run: times/timezones/dynamodb/src/test/resources/seed.sh
      - run: english/language-rooms/dynamodb/src/test/resources/seed.sh
      - run: english/urban-word-of-the-day/dynamodb/src/test/resources/seed.sh
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: clean dbTest
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            **/build/test-results
            **/build/reports

  integration-test:
    name: Integration test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: clean integrationTest
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            **/build/test-results
            **/build/reports

  cdk-test:
    name: CDK test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: clean shadowJar
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install
        working-directory: .deploy/lambda
      - run: npm test
        working-directory: .deploy/lambda

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            **/junit.xml

  test-publish:
    name: Publish test results
    runs-on: ubuntu-20.04
    needs:
      - test
      - db-test
      - integration-test
      - cdk-test
    if: always()
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: test-results
      - uses: mikepenz/action-junit-report@v3
        with:
          report_paths: |-
            **/test-results/test/TEST-*.xml
            **/test-results/dbTest/TEST-*.xml
            **/test-results/integrationTest/TEST-*.xml
            **/junit.xml
          check_name: |-
            Test reports
            DB test reports
            Integration test reports
            CDK test reports
          include_passed: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
